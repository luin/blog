---
import config from "./config";

export async function getPosts() {
  const parseDescription = (content) => {
    const text = content
      .split("\n")
      .filter(Boolean)[0]
      .replace(/<[^>]*>?/gm, "")
      .replace(/[*]/gm, "")
      .trim();
    const terminators = ["。", "！", "？", ". "];
    for (const terminator of terminators) {
      const index = text.indexOf(terminator);
      if (index > -1) {
        return text.slice(0, index + terminator.length);
      }
    }
    return text;
  };

  try {
    let allPosts = await Astro.fetchContent("./posts/**/*.md");
    return allPosts
      .map((post) => {
        const slug = getSlug(post);
        const filename = post.file.pathname.split("/").pop();
        const date = filename.split("-").slice(0, 3).join("/");

        return date
          ? {
              ...post,
              description:
                post.description || parseDescription(post.content.source),
              permalink: `${config.site}/${slug}`,
              path: `/${slug}`,
              publishDate: date,
              slug: getSlug(post),
            }
          : null;
      })
      .filter(Boolean)
      .sort(
        (a, b) =>
          new Date(b.publishDate).valueOf() - new Date(a.publishDate).valueOf()
      );
  } catch (err) {
    console.error(err);
  }
  return [];
}

export function getSlug(page) {
  const filename = page.file.pathname.split("/").pop();
  const matched = filename.split("-");
  return `${matched[0]}/${matched[1]}/${[
    matched.slice(3).join("-").replace(".md", ""),
  ]}`;
}
---
